{"version":3,"sources":["components/NewsSourceCard.jsx","components/Carousel.jsx","components/ArticlesCluster.jsx","components/LoadingAnimation.jsx","hooks/useOnScreen.jsx","App.js","serviceWorker.js","index.js"],"names":["NewsSourceCard","props","useState","index","setIndex","calculateCircularIndex","i","n","articlesLength","articles","map","article","title","length","longestArticleIndex","indexOf","Math","max","TransitionGroup","CSSTransition","key","classNames","timeout","exit","className","src","source","alt","href","url","onClick","activeDot","numDots","maxDotsToShow","dots","min","dotClass","push","makeDots","Carousel","images","period","useEffect","interval","setInterval","clearInterval","ArticlesCluster","page","setPage","maxDisplayArticles","setMaxDisplayArticles","sources","Object","keys","calculatePage","numArticles","floor","isMobile","articlesClusterPages","forEach","column_class","top_image","articlesGroup","filter","image","includes","imageColumn","random","articlesColumn","columns","newsColumnFirst","LoadingAnimation","useOnScreen","options","ref","setRef","visible","setVisible","React","observer","IntersectionObserver","entry","isIntersecting","observe","unobserve","App","REQUEST_URL","data","setData","loading","setLoading","window","innerWidth","setIsMobile","bottomIndex","setBottomIndex","visibleClusters","setVisibleClusters","a","fetch","res","json","then","fetchData","scrollTo","top","behavior","addEventListener","date","Date","toLocaleDateString","weekday","year","month","day","toUpperCase","substring","slice","articlesCluster","newBottomIndex","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d7b71678.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles/NewsSourceCard.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst NewsSourceCard = (props) => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  //calcular el valor del indice de un arreglo circular\r\n  const calculateCircularIndex = (i, n) => {\r\n    return (i + n) % n;\r\n  };\r\n\r\n  //generar los puntitos que indican que noticia esta activa\r\n  const makeDots = (activeDot, numDots, maxDotsToShow) => {\r\n    var dots = [];\r\n    for (let i = 0; i < Math.min(numDots, maxDotsToShow); i++) {\r\n      var dotClass =\r\n        i === activeDot ||\r\n        (i === maxDotsToShow - 1 && activeDot > maxDotsToShow - 1)\r\n          ? \"dot dot-inactive\"\r\n          : \"dot dot-active\";\r\n      dots.push(<span className={dotClass} key={i}></span>);\r\n    }\r\n    return dots;\r\n  };\r\n\r\n  //avanzar, retroceder noticias\r\n  const handleNextButton = () => {\r\n    setIndex(calculateCircularIndex(index + 1, props.articles.length));\r\n  };\r\n  const handlePrevButton = () => {\r\n    setIndex(calculateCircularIndex(index - 1, props.articles.length));\r\n  };\r\n\r\n  //arreglo con los largos de los titulos\r\n  const articlesLength = props.articles.map((article) => article.title.length);\r\n  //indice del titulo mas largo\r\n  const longestArticleIndex = articlesLength.indexOf(\r\n    Math.max(...articlesLength)\r\n  );\r\n\r\n  return (\r\n    <TransitionGroup>\r\n      <CSSTransition key={index} classNames=\"slide\" timeout={300} exit={false}>\r\n        <article className=\"box news-source-card\">\r\n          {/*header*/}\r\n          <header className=\"has-text-left\">\r\n            <img\r\n              className=\"news-source-logo\"\r\n              src={\r\n                process.env.PUBLIC_URL +\r\n                \"/static/media/news_sources_logos/\" +\r\n                props.source +\r\n                \".jpg\"\r\n              }\r\n              alt={props.source + \" logo\"}\r\n            />\r\n          </header>\r\n\r\n          {/*contenido de la tarjeta*/}\r\n          <div className=\"card-content-title has-text-left\">\r\n            {/*titulo más largo de la fuente, invisible, para setear el tamaño de la tarjeta*/}\r\n            <div className=\"title invisible-card-title is-6\">\r\n              {props.articles[longestArticleIndex].title}\r\n            </div>\r\n            {/*titulo a mostrar*/}\r\n            <div className=\"title visible-card-title is-6\">\r\n              <a href={props.articles[index].url}>\r\n                {props.articles[index].title}\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/*mostrar footer si la fuente tiene mas de una noticia */}\r\n          {props.articles.length > 1 && (\r\n            <footer className=\"columns is-mobile\">\r\n              {/*boton izquierda */}\r\n              <div className=\"column is-one-quarter\">\r\n                <div className=\"button is-text\" onClick={handlePrevButton}>\r\n                  <span className=\"icon is-small\">\r\n                    <img\r\n                      src={\r\n                        process.env.PUBLIC_URL +\r\n                        \"/static/media/icons/arrow-left.svg\"\r\n                      }\r\n                      alt=\"Anterior\"\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              {/*puntitos */}\r\n              <div className=\"dots column is-half\">\r\n                {makeDots(index, props.articles.length, 7)}\r\n              </div>\r\n              {/*boton derecha */}\r\n              <div className=\"column is-one-quarter\">\r\n                <div className=\"button is-text\" onClick={handleNextButton}>\r\n                  <span className=\"icon is-small\">\r\n                    <img\r\n                      src={\r\n                        process.env.PUBLIC_URL +\r\n                        \"/static/media/icons/arrow-right.svg\"\r\n                      }\r\n                      alt=\"Siguiente\"\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </footer>\r\n          )}\r\n        </article>\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default NewsSourceCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport \"./styles/Carousel.css\";\r\n\r\nconst Carousel = (props) => {\r\n  const [index, setIndex] = useState(0);\r\n  const { images, period } = props;\r\n\r\n  //incrementar indice periodicamente\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setIndex((index + 1) % images.length);\r\n    }, period);\r\n    return () => clearInterval(interval);\r\n  }, [index, period, images]);\r\n\r\n  return (\r\n    <TransitionGroup className=\"carousel-transition-group\">\r\n      <CSSTransition key={index} classNames=\"slide-carousel\" timeout={1300}>\r\n        <img\r\n          className=\"carousel-image\"\r\n          src={images[index]}\r\n          alt=\"Imagen de noticia\"\r\n        />\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport \"./styles/ArticlesCluster.css\";\r\nimport NewsSourceCard from \"./NewsSourceCard\";\r\nimport Carousel from \"./Carousel\";\r\n\r\nconst ArticlesCluster = (props) => {\r\n  const MAX_DISPLAY_ARTICLES_MOBILE = 3;\r\n  const MAX_DISPLAY_ARTICLES_DESKTOP = 4;\r\n  const [page, setPage] = useState(0);\r\n  const [maxDisplayArticles, setMaxDisplayArticles] = useState(\r\n    MAX_DISPLAY_ARTICLES_DESKTOP\r\n  ); //cuantas fuentes mostrar en pantalla, dependiendo la resolucion del dispositivo\r\n  const sources = Object.keys(props.articles);\r\n\r\n  //Calcular el valor de la pagina, teniendo en cuenta la cantidad de noticias a mostrar simultaneamente\r\n  const calculatePage = (page, numArticles, maxDisplayArticles) => {\r\n    return page % (Math.floor((numArticles - 1) / maxDisplayArticles) + 1);\r\n  };\r\n\r\n  //Actualizar cuantos articulos se muestran por pagina cuando cambia el viewport\r\n  useEffect(() => {\r\n    setMaxDisplayArticles(\r\n      props.isMobile\r\n        ? MAX_DISPLAY_ARTICLES_MOBILE\r\n        : MAX_DISPLAY_ARTICLES_DESKTOP\r\n    );\r\n    setPage(calculatePage(page, sources.length, maxDisplayArticles));\r\n  }, [props, page, sources, maxDisplayArticles]);\r\n\r\n  //Boton pagina siguiente\r\n  const handleNextPage = () => {\r\n    setPage(calculatePage(page + 1, sources.length, maxDisplayArticles));\r\n  };\r\n\r\n  //Imagenes a filtrar del Carousel\r\n  const undesirableImages = [\r\n    \"https://www.infobae.com/pf/resources/images/fallback-promo-image.png\",\r\n    \"https://www.pagina12.com.ar/assets/media/FallBack-Logo.jpg\",\r\n  ];\r\n\r\n  //Arreglo para guardar las distintas paginas de clusters\r\n  var articlesClusterPages = []; //cada pagina de clusters es un arreglo con 3 o 4 noticias (dependiendo de si es mobil o no)\r\n  //Arreglo con las urls de las imagenes de cada noticia\r\n  var images = [];\r\n  /*Para cada fuente: colocar una NewsSourceCard en la pagina que corresponde, con el className que corresponde\r\n  y guardar la url de su top image en el arreglo images*/\r\n  sources.forEach((source, i) => {\r\n    if (i % maxDisplayArticles === 0) {\r\n      articlesClusterPages.push([]);\r\n    }\r\n    var column_class =\r\n      sources.length < 3 || props.isMobile\r\n        ? \"column is-full\"\r\n        : \"column is-half\";\r\n    articlesClusterPages[Math.floor(i / maxDisplayArticles)].push(\r\n      <div className={column_class} key={i}>\r\n        <NewsSourceCard source={source} articles={props.articles[source]} />\r\n      </div>\r\n    );\r\n    props.articles[source].forEach((article) => {\r\n      images.push(article.top_image);\r\n    });\r\n  });\r\n\r\n  //wrapear cada pagina en un contenedor\r\n  articlesClusterPages = articlesClusterPages.map((articlesGroup) => (\r\n    <div className=\"columns is-multiline is-vcentered is-centered\">\r\n      {articlesGroup}\r\n    </div>\r\n  ));\r\n\r\n  //sacar imagenes indeseadas\r\n  undesirableImages.forEach(\r\n    (url) => (images = images.filter((image) => !image.includes(url)))\r\n  );\r\n\r\n  //Columna del Carousel\r\n  const imageColumn = (\r\n    <div className=\"column is-one-third images-column\" key={0}>\r\n      <Carousel images={images} period={Math.random() * 1000 + 2000} />\r\n    </div>\r\n  );\r\n\r\n  //Columna con las noticias\r\n  var articlesColumn = (\r\n    <div className=\"column is-two-thirds articles-column\" key={{ page }}>\r\n      <TransitionGroup>\r\n        <CSSTransition key={page} classNames=\"slide-articles\" timeout={300}>\r\n          {/*div visible con la pagina de noticias que se ven en pantalla*/}\r\n          <div className={\"articles-cluster-visible-content\"}>\r\n            {articlesClusterPages[page]}{\" \"}\r\n          </div>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n      {/*div invisible con la primer pagina de noticias, para fijar el tamaño  */}\r\n      <div className={\"articles-cluster-invisible-content\"}>\r\n        {articlesClusterPages[0]}{\" \"}\r\n      </div>\r\n      <div>\r\n        {Math.floor(sources.length / (maxDisplayArticles + 1)) > 0 && (\r\n          <div className=\"column\">\r\n            <div className=\"button is-text\" onClick={handleNextPage}>\r\n              <span className=\"icon is-medium\">\r\n                <img\r\n                  src={\r\n                    process.env.PUBLIC_URL +\r\n                    \"/static/media/icons/sort-down-solid.svg\"\r\n                  }\r\n                  alt=\"Más noticias similares\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  //la disposicion de las columnas, dependiendo si las imagenes van a la izquierda o derecha\r\n  const columns =\r\n    !props.newsColumnFirst || props.isMobile\r\n      ? [imageColumn, articlesColumn]\r\n      : [articlesColumn, imageColumn];\r\n\r\n  return (\r\n    <div className={\"box articles-cluster-container\"}>\r\n      <div className=\"columns is-gapless\">{columns}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticlesCluster;\r\n","import React from \"react\";\r\nimport \"./styles/LoadingAnimation.css\";\r\n\r\nconst LoadingAnimation = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"bounce1\"></div>\r\n      <div className=\"bounce2\"></div>\r\n      <div className=\"bounce3\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingAnimation;\r\n","import React, { useState} from \"react\";\r\n\r\nfunction useOnScreen(options) {\r\n    const [ref, setRef] = useState(null);\r\n    const [visible, setVisible] = useState(false);\r\n  \r\n    React.useEffect(() => {\r\n      const observer = new IntersectionObserver(([entry]) => {\r\n        setVisible(entry.isIntersecting);\r\n      }, options);\r\n  \r\n      if (ref) {\r\n        observer.observe(ref);\r\n      }\r\n      return () => {\r\n        if (ref) {\r\n          observer.unobserve(ref);\r\n        }\r\n      };\r\n    }, [ref, options]);\r\n    return [setRef, visible];\r\n  }\r\n  \r\n  export default useOnScreen","import React, { useState, useEffect } from \"react\";\r\nimport \"bulma/css/bulma.css\";\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\nimport ArticlesCluster from \"./components/ArticlesCluster\";\r\nimport LoadingAnimation from \"./components/LoadingAnimation.jsx\";\r\nimport useOnScreen from \"./hooks/useOnScreen.jsx\";\r\n\r\nfunction App() {\r\n  const VISIBLE_CLUSTERS_DESKTOP = 10;\r\n  const VISIBLE_CLUSTERS_MOBILE = 5;\r\n  const REQUEST_URL = \"https://www.newsdata.com.ar/api/news_clusters/latest\";\r\n  const MAX_MOBILE_VIEWPORT_WIDTH = 769;\r\n\r\n  const [data, setData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [isMobile, setIsMobile] = useState(\r\n    window.innerWidth < MAX_MOBILE_VIEWPORT_WIDTH ? true : false\r\n  );\r\n  const [bottomIndex, setBottomIndex] = useState(0);\r\n  const [visibleClusters, setVisibleClusters] = useState(\r\n    isMobile ? VISIBLE_CLUSTERS_MOBILE : VISIBLE_CLUSTERS_DESKTOP\r\n  );\r\n  const [setRef, visible] = useOnScreen();\r\n\r\n  //fetch json al inicio\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  //scroll top cuando cambia la pagina\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n  }, [bottomIndex]);\r\n\r\n  //async function para fetchear el json\r\n  async function fetchData() {\r\n    const res = await fetch(REQUEST_URL);\r\n    setLoading(true);\r\n    res.json().then((res) => {\r\n      setData(res);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  //callback de resize: el tamaño del viewport indica: colapsar las imagenes+noticias, la cantidad de grupos a mostrar\r\n  const handleResize = () => {\r\n    if (window.innerWidth < MAX_MOBILE_VIEWPORT_WIDTH && !isMobile) {\r\n      setIsMobile(true);\r\n      setVisibleClusters(VISIBLE_CLUSTERS_MOBILE);\r\n    } else if (window.innerWidth > MAX_MOBILE_VIEWPORT_WIDTH && isMobile) {\r\n      setIsMobile(false);\r\n      setVisibleClusters(VISIBLE_CLUSTERS_DESKTOP);\r\n    }\r\n  };\r\n  window.addEventListener(\"resize\", handleResize);\r\n\r\n  //callback boton mas noticias\r\n  const handleButton = () => {\r\n    var newBottomIndex =\r\n      bottomIndex + visibleClusters > data[\"clusters\"].length - 1\r\n        ? 0\r\n        : bottomIndex + visibleClusters;\r\n    setBottomIndex(newBottomIndex);\r\n  };\r\n\r\n  //fecha de hoy\r\n  var date = new Date().toLocaleDateString(\"es-ES\", {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n  date = date[0].toUpperCase() + date.substring(1);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <section className=\"hero is-primary\">\r\n        <div className=\"hero-body\">\r\n          <div className=\"container has-text-left\">\r\n            <div className=\"columns is-mobile is-vcentered\">\r\n              <div className=\"logo column is-narrow\">\r\n                <img src=\".\\logo.png\" alt=\"logo\" />\r\n              </div>\r\n              <div className=\"column\">\r\n                <h1 className=\"title\">news.data</h1>\r\n                <h2 className=\"subtitle\">Todas las noticias en un lugar</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <h2 className=\"date-header\">\r\n            <div className=\"level\">\r\n              <div className=\"level-left\"> {date}</div>\r\n            </div>\r\n          </h2>\r\n          {!loading ? (\r\n            <div>\r\n              {data[\"clusters\"]\r\n                .slice(\r\n                  bottomIndex,\r\n                  bottomIndex + visibleClusters > data[\"clusters\"].length - 1\r\n                    ? data[\"clusters\"].length\r\n                    : bottomIndex + visibleClusters\r\n                )\r\n                .map((articlesCluster, i) => (\r\n                  <ArticlesCluster\r\n                    articles={articlesCluster}\r\n                    newsColumnFirst={i % 2 === 0}\r\n                    isMobile={isMobile}\r\n                    key={i + bottomIndex * visibleClusters}\r\n                  ></ArticlesCluster>\r\n                ))}\r\n              {visibleClusters < data[\"clusters\"].length && (\r\n                <div className=\"container\">\r\n                  <div>\r\n                    <div className=\"container\">\r\n                      <button\r\n                        className={\r\n                          visible ? \"circleBase type2\" : \"circleBase type1\"\r\n                        }\r\n                        onClick={handleButton}\r\n                      >\r\n                        Más noticias\r\n                      </button>\r\n                    </div>\r\n                    <div ref={setRef}></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"container\">\r\n              <LoadingAnimation></LoadingAnimation>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport WebFont from \"webfontloader\";\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: [\"Rubik:400,500\", \"sans-serif\"],\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}